<% layout('layout') -%>
<div class="menubar">
	<div class="sidebar-toggler visible-xs">
		<i class="ion-navicon"></i>
	</div>
	
	<div class="page-title">
		<%= customer.name %> Profile
		<!-- <small class="hidden-xs" style="font-weight:600;">All tabs have content</small> -->
	</div>	
	<a data-toggle="modal" data-target="#confirm-modal" id="deleteCustomer" href="#" class="pull-right btn btn-primary" style="margin-left: 10px; background-color: #CA4242; border-color: #BD3131">Delete customer</a>
	<a href="#" id="editBtn" class="pull-right btn btn-primary">Edit customer</a>
</div>

<div class="content-wrapper clearfix">
	<div class="profile-info">
		<div class="avatar">
			<img src="<%= customer.image %>" />
		<div class="name"><%= customer.name %></div>
			<div class="position"><%= customer.type %></div>
		</div>
		<div class="main-details clearfix">
			<div class="col">
				<div class="value"><%= orders.filter( function(o) {return o.status != 'cancelled'}).length %></div>
				Orders
			</div>
			<div class="col">
				<div class="value">$<%= orders.filter( function(o) {return o.status == 'completed'}).reduce( function(acc, o) { return acc + o.total}, 0).toFixed(2) %></div>
				Lifetime spent
			</div>
		</div>
		<div class="details">
			<div class="field">
				<label>Email</label>
				<div class="value"><%= customer.email %></div>
				<div class="sub">Home</div>
			</div>
			<div class="field">
				<label>Phone</label>
				<div class="value"><%= customer.contactNumber %></div>
				<div class="sub">Home</div>
			</div>
			<div class="field">
				<label>Address</label>
				<div class="value">
					<%= customer.billing.address %><br/>
					<%= customer.billing.city + ', ' + customer.billing.state + ' ' + customer.billing.zip %>
				</div>
			</div>
			<div class="field">
				<label>Signed up</label>
				<div class="value" id="registeredAt">
					<%= customer.registered %>
				</div>
			</div>
		</div>
	</div>

	<div class="profile-content">
		
		<div class="tabs">
			<ul>
				<li>
					<a href="#" class="active" >Details</a>
				</li>
				<li>
					<a href="#">Orders</a>
				</li>
				<li>
					<a href="#">Customer Notes</a>
				</li>
			</ul>
		</div>

		<div class="tab-content">

			<div class="tab work active	">
				<form id="edit-customer" class="form-horizontal" method="post" action="#" role="form" data-toggle="validator" enctype="multipart/form-data">
				  	<div class="form-group">
				  		<!-- For HTTP PUT method support -->
				  		<input type="hidden" name="_method" value="PUT"/>
				  		<input type="hidden" name="image" value="<%= customer.image %>" >
					    <label class="col-sm-2 col-md-2 control-label">Name</label>
					    <div class="col-sm-10 col-md-8">
					      <input type="text" class="form-control" data-minlength="5" name="name" data-fv-field="name" value="<%= customer.name%>"/>
					    </div>
				  	</div>
				  	<div class="form-group">
					    <label class="col-sm-2 col-md-2 control-label">Type</label>
					    <div class="col-sm-10 col-md-8">
					      <select class="form-control" name="type"/>
					      	<option value="End User">End User</option>
					      	<option value="Home User">Home User </option>
					      	<option value="Company">Company</option>
					      </select>
					    </div>
				  	</div>
				  	<div class="form-group">
					    <label class="col-sm-2 col-md-2 control-label">Email address</label>
					    <div class="col-sm-10 col-md-8">
					      	<input type="text" class="form-control" name="email" value="<%= customer.email %>" />
					    </div>
				  	</div>
				  	<div class="form-group">
					    <label class="col-sm-2 col-md-2 control-label">Phone number</label>
					    <div class="col-sm-10 col-md-8">
					    	<div class="has-feedback">
								<input type="text" class="form-control mask-phone" name="contactNumber" value="<%= customer.contactNumber%>"/>
							</div>
					    </div>
				  	</div>
				  	<div class="form-group">
					    <label class="col-sm-2 col-md-2 control-label">Discount</label>
					    <div class="col-sm-10 col-md-8">
					    	<div class="has-feedback">
								<input type="text" class="form-control mask-phone" name="discount" value="<%= customer.discount %>"/>
								<i class="ion-information-circled form-control-feedback" data-toggle="tooltip" title="" data-original-title="Enter in '%'"></i>
							</div>
					    </div>
				  	</div>

				  	<!-- Billing Address -->
				  	<div class="address billing">
				  		<div class="form-group">
						    <label class="col-sm-2 col-md-2 control-label">Billing Address</label>
						    <div class="col-sm-10 col-md-8">
						      	<input type="text" class="form-control" id="billAddress" placeholder="Address" name="billAddress"  value="<%= customer.billing.address %>"/>
						    </div>
						</div>
						<div class="form-group">
						    <div class="col-sm-3 col-sm-offset-2">
						      	<input type="text" class="form-control" placeholder="City" name="billcity" value="<%= customer.billing.city %>"/>
						    </div>
						    <div class="col-sm-3">
						      	<input type="text" class="form-control" placeholder="State" name="billstate"  value="<%= customer.billing.state %>"/>
						    </div>
						    <div class="col-sm-2 col-md-2">
						      	<input type="text" class="form-control" placeholder="Zip code" name="billzip" value="<%= customer.billing.zip %>"/>
						    </div>
					  	</div>
				  	</div>

				    <!-- Shippping Address -->
				  	<div class="address shipping" style="margin-bottom: -10px">
				  	
				  		<div class="form-group">
						    <label class="col-sm-2 col-md-2 control-label">Shipping Address</label>
						    <div class="col-sm-10 col-md-8">
						      	<input type="text" class="form-control" id="shipAddress" placeholder="Address" name="shipAddress" value="<%= customer.shipping.address %>"/>
						    </div>
						</div>
						<div class="form-group">
						    <div class="col-sm-3 col-sm-offset-2">
						      	<input type="text" class="form-control" placeholder="City" name="shipcity" value="<%= customer.shipping.city %>"/>
						    </div>
						    <div class="col-sm-3">
						      	<input type="text" class="form-control" placeholder="State" name="shipstate"  value="<%= customer.shipping.state %>"/>
						    </div>
						    <div class="col-sm-2 col-md-2">
						      	<input type="text" class="form-control" placeholder="Zip code" name="shipzip" value="<%= customer.shipping.zip%>"/>
						    </div>
					  	</div>
				  	</div>
					<div class="form-group" style="margin-bottom: 28px">
					    <div class="col-sm-offset-2 col-sm-10">
					      	<div class="checkbox">
					        	<label>
					          		<input type="checkbox" id="addrChkbx" checked="checked"/> Same as Billing
				        		</label>
					      	</div>
					    </div>
				  	</div>
				  	<div class="form-group">
					    <label for="inputPassword3" class="col-sm-2 col-md-2 control-label">Extra notes</label>
					    <div class="col-sm-10 col-md-8">
					    	<textarea class="form-control" rows="4" id="addInfo" name="additionalInfo"><%= customer.additionalInfo %></textarea>
					    </div>
				  	</div>
				  	<div class="form-group">
			        	<div class="col-sm-10 col-md-8">
			            	<div id="messages"></div>
			        	</div>
			    	</div>
				  	<div class="form-group form-actions">
				    	<div class="col-sm-offset-2 col-sm-10">
				    		<a href="/customers" class="btn btn-default" style="margin-right: 12px">Back</a>
				      		<button id="submitEdit" type="submit" class="btn btn-success">Save customer</button>
			    		</div>
				  	</div>
				</form>
			</div>

			<div class="tab orders">
				<table id="datatable-example">
                    <thead>
                        <tr>
                            <th tabindex="0" rowspan="1" colspan="1">Order
                            </th>
                            <th tabindex="0" rowspan="1" colspan="1">Date
                            </th>
                            <th tabindex="0" rowspan="1" colspan="1">Status
                            </th>
                            <th tabindex="0" rowspan="1" colspan="1">Total
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                    	<% orders.forEach( function(o) { %>
                        <tr>
                            <td>
                            	<a href="/orders/<%= o._id %>">#<%= o.orderNumber %></a>
                            </td>
                            <td class="order-date"><%= o.statusHistory.processing %></td>
                            <td><span class="label"><%= o.status %></span></td>
                            <td>$<%= o.total.toFixed(2) %></td>
                        </tr>
                        <% }) %>
                   	</tbody>
                </table>
			</div>

			<div class="tab notes">
				<form id="comment-submit">
					<div class="editor clearfix">
						<textarea class="form-control" rows="4" placeholder="Enter a new note..." id='comment-text'></textarea>

						<div class="options clearfix">
							<button class="button" type="submit">
								<span>Submit note</span>
							</button>
						</div>
					</div>
				</form>

				<div class="filter clearfix">
					<h4 class="pull-left">Recent Notes</h4>
				</div>

				<div class="comments">
					<% customer.comments.reverse().forEach( function(c) { %>
					<div class="row comment">
						<div class="col-sm-2">
							<img src="<%= c.authorAvatar %>" class="avatar img-responsive" />
						</div>
						<div class="col-sm-10">
							<div class="message clearfix">
								<header>
									<span class="name"><%= c.authorName %></span>
									<span class="date pull-right"><%= c.posted %></span>
								</header>
								<div class="note">
									<p class='comment-text'>
										<%= c.text %>
									</p>
								</div>
							</div>
						</div>
					</div>
					<% }) %>
				</div>
				<!-- <div class="load-more">
					<a href="#" class="btn btn-default">Load more comments</a>
				</div> -->
				<div class="row comment" id='comment-template' style='display:hidden'>
					<div class="col-sm-2">
						<img src="" class="avatar img-responsive" />
					</div>
					<div class="col-sm-10">
						<div class="message clearfix">
							<header>
								<span class="name"></span>
								<span class="date pull-right"></span>
							</header>
							<div class="note">
								<p class='comment-text'>
								</p>
							</div>
						</div>
					</div>
				</div>

			</div>

		</div>
	</div>
</div>

<div class="modal fade" id="confirm-modal" tabindex="-1" role="dialog">
  	<div class="modal-dialog">
	    <div class="modal-content">
	    	<form method="post" action="/customers/<%= customer._id %>/edit" role="form">
	    	<input type="hidden" name="_method" value="DELETE"/>
		      	<div class="modal-header">
		        	<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
		        	<h4 class="modal-title" id="myModalLabel">
		        		Are you sure you want to delete this Customer?
		        	</h4>
		      	</div>
		      	<div class="modal-body">
					Do you want to delete this customer? It will be impossible to restore it.
		      	</div>
		      	<div class="modal-footer">
			        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
			        <button type="submit" class="btn btn-danger">Yes, delete</button>
		      	</div>
		    </form>
	    </div>
  	</div>
</div>

<script type="text/javascript">
	$( document ).ready(function() {
		$("body").attr('id', "user-profile");

		$('.order-date').each(function(e) {
			$(this).html(dateFormat($(this).html(), 'mmm d, yyyy'))
		})

		$('#edit-customer').find('select').each(function() {
			$(this).val("<%= customer.type %>")
		})

		$('span.date.pull-right:not(:last)').each( function(e) {
            $(this).html( dateFormat($(this).html(), 'mmm d, yyyy'))        		
        })
		// Focus input when prompt modal is shown
		$('#prompt-modal').on('shown.bs.modal', function (e) {
			$("#prompt-modal").find("input:text").focus();
		})

		//format dates
        $('#registeredAt').each( function(e) {
            $(this).html( dateFormat($(this).html(), 'mmm d, yyyy'))
        })

        //submitting new comment
        $('#comment-submit').submit(function(e) {

        	e.preventDefault()
        	e.stopImmediatePropagation()

        	if(!$('#comment-text').val()) {
        		Messenger().post({
				  	message: 'Note field should not be empty',
				  	type: 'error',
				  	showCloseButton: true
				});
				return
        	}

        	var comm = {
        		author: '<%= customer._id %>',
        		text: $('#comment-text').val()
        	}

        	$.ajax({
			url: '/customers/<%= customer._id %>/comment',
			type: 'POST',
			contentType: 'application/json; charset=UTF-8',
			dataType: 'json',
			data: JSON.stringify(comm),
	        timeout: 5000,
	        complete: () => console.log("complete !"),
	        success: (data) => {
				Messenger().post("New comment has been added!");
				var comment = $('#comment-template').clone()

				$(comment).find('img').attr('src', data.authorAvatar)
				$(comment).find('.name').html(data.authorName)
				$(comment).find('.date').html(dateFormat(data.posted, 'mmm d, yyyy'))
				console.log(data.text)
				$(comment).find('.comment-text').html(data.text)

				$('.comments').prepend($(comment))
				comment.slideDown('slow')
	        },
	        error: () => {
	        	console.log("ERROR") 
	        	Messenger().post({
				  	message: 'Sorry, there was problem with adding comment.',
				  	type: 'error',
				  	showCloseButton: true
				});
	        }
		})
        })

        $('.label').each(function(e) {
            var status = $(this).html()

            switch(status) {
                case 'processing':
                    $(this).addClass('label-warning')
                    break;
                case 'shipped':
                    $(this).addClass('label-primary')
                    break;                    
                case 'completed':
                    $(this).addClass('label-success')
                    break;                        
                default:
                    $(this).addClass('label-danger')
            }
        })

    	// orders datatable 
        $('#datatable-example').dataTable({
            "sPaginationType": "full_numbers",
            "iDisplayLength": 20,
			"aLengthMenu": [[20, 50, 100, -1], [20, 50, 100, "All"]]
        });
	})	 
	
	console.log($("#edit-customer input[name='name']").val())

	// AJAX form update
	$('#edit-customer').submit(function(e) {

		e.preventDefault();
		e.stopImmediatePropagation();

		console.log("form axaj update")
		console.log($("#edit-customer input[name='billAddress']").val())

		var formData = {
			name : $("#edit-customer input[name='name']").val(),
            type : $('#edit-customer').find('select').val(),
            image : $("#edit-customer input[name='image']").val(),
            email : $("#edit-customer input[name='email']").val(),
            discount : $("#edit-customer input[name='discount']").val(),
            contactNumber: $("#edit-customer input[name='contactNumber']").val(),
            additionalInfo: $("#edit-customer #addInfo").val(),
            billing: {
            	address: $("#edit-customer input[name='billAddress']").val(),
            	city: $("#edit-customer input[name='billcity']").val(),
            	state: $("#edit-customer input[name='billstate']").val(),
            	zip: $("#edit-customer input[name='billzip']").val()
            },
            shipping: {
            	address: $("#edit-customer input[name='shipAddress']").val(),
            	city: $("#edit-customer input[name='shipcity']").val(),
            	state: $("#edit-customer input[name='shipstate']").val(),
            	zip: $("#edit-customer input[name='shipzip']").val()
            }
	    }

	    console.log(formData)

		$.ajax({
			url: '/customers/<%= customer._id %>/edit',
			type: 'PUT',
			contentType: 'application/json; charset=UTF-8',
			dataType: 'json',
			data: JSON.stringify(formData),
	        timeout: 5000,
	        complete: () => console.log("complete !"),
	        success: (data) => {
				Messenger().post("Customer has been updated!");
	        },
	        error: () => {
	        	console.log("ERROR") 
	        	Messenger().post({
				  	message: 'Sorry, there was problem with updating Customer.',
				  	type: 'error',
				  	showCloseButton: true
				});
	        }
		})
	})

	// tabs
	var $tabs = $(".tabs a");
	var $tab_contents = $(".tab-content .tab");
	var $editBtn = $("#editBtn");
	var $submitEdit = $("#submitEdit");

	$submitEdit.submit(function(e) {
		console.log("working")

	})


	$editBtn.click(function(e) {
		e.preventDefault();
		var index = $tabs.index(this);

		$tabs.removeClass("active");
		// first is a tab with form 
		$tabs.first().addClass("active")

		$tab_contents.removeClass("active");
		$tab_contents.first().addClass("active");
	})

	$tabs.click(function (e) {
		e.preventDefault();
		var index = $tabs.index(this);

		$tabs.removeClass("active");
		$tabs.eq(index).addClass("active");

		$tab_contents.removeClass("active");
		$tab_contents.eq(index).addClass("active");
	}); 

	$("#addrChkbx").on("change", function(){
    	if (this.checked) {
	      $("[name='shipAddress']").val($("[name='billAddress']").val());
	      $("[name='shipcity']").val($("[name='billcity']").val());
	      $("[name='shipstate']").val($("[name='billstate']").val());
	      $("[name='shipzip']").val($("[name='billzip']").val());
	      $('#edit-customer').formValidation('revalidateField', 'shipAddress');
	      $('#edit-customer').formValidation('revalidateField', 'shipcity');
	      $('#edit-customer').formValidation('revalidateField', 'shipstate');
	      $('#edit-customer').formValidation('revalidateField', 'shipzip');
    	}
  	});

    $('#edit-customer').bootstrapValidator({
        err: {
            container: 'tooltip'
        },
        fields: {
            name: {
                validators: {
                    notEmpty: {
                        message: 'The full name is required and cannot be empty'
                    },
                    stringLength: {
                        min: 3,
                        max: 30,
                        message: 'The name must be more than 3 and less than 30 characters long'
                    },
                    regexp: {
                        regexp: /^[a-zA-Z0-9_ ]+$/,
                        message: 'The name can only consist of alphabetical, number and underscore'
                    }
                }
            },
            email: {
                validators: {
                    notEmpty: {
                        message: 'The email address is required and cannot be empty'
                    },
                    emailAddress: {
                        message: 'The email address is not valid'
                    }
                }
            },
            type: {
                validators: {
                    notEmpty: {
                        message: 'The type is required and cannot be empty'
                    },
                }
            },
            discount: {
                validators: {
                    notEmpty: {
                        message: 'The content is required and cannot be empty'
                    },
                    integer: {
                    	message: 'Discount should be numeric'
                    },
                    between: {
                    	min: 0,
                    	max: 100,
                    	message: 'Discount should be between 0 and 100'
                    }
                }
            },
            contactNumber: {
                validators: {
                    notEmpty: {
                        message: 'The content is required and cannot be empty'
                    },
                    phone: {
                    	country: 'US',
                    	message: 'Not acceptable phone number format'
                    }
                }
            },
            additionalInfo: {
                validators: {
                    notEmpty: {
                        message: 'The content is required and cannot be empty'
                    },
                    stringLength: {
                        max: 500,
                        message: 'The content must be less than 500 characters long'
                    }
                }
            },
            billAddress: {
                validators: {
                    notEmpty: {
                        message: 'The content is required and cannot be empty'
                    },
                    stringLength: {
                        max: 100,
                        message: 'The content must be less than 100 characters long'
                    }
                }
            },
			shipAddress: {
                validators: {
                    notEmpty: {
                        message: 'The content is required and cannot be empty'
                    },
                    stringLength: {
                        max: 100,
                        message: 'The content must be less than 100 characters long'
                    }
                }
            },
            billcity: {
                validators: {
                    notEmpty: {
                        message: 'The content is required and cannot be empty'
                    },
                    stringLength: {
                        max: 100,
                        message: 'The content must be less than 100 characters long'
                    }
                }
            },
			shipcity: {
                validators: {
                    notEmpty: {
                        message: 'The content is required and cannot be empty'
                    },
                    stringLength: {
                        max: 100,
                        message: 'The content must be less than 100 characters long'
                    }
                }
            },
            billstate: {
                validators: {
                    notEmpty: {
                        message: 'The content is required and cannot be empty'
                    },
                    stringLength: {
                        max: 100,
                        message: 'The content must be less than 100 characters long'
                    }
                }
            },
			shipstate: {
                validators: {
                    notEmpty: {
                        message: 'The content is required and cannot be empty'
                    },
                    stringLength: {
                        max: 100,
                        message: 'The content must be less than 100 characters long'
                    }
                }
            },
            billzip: {
                validators: {
                    notEmpty: {
                        message: 'The content is required and cannot be empty'
                    },
                    stringLength: {
                        max: 100,
                        message: 'The content must be less than 100 characters long'
                    }
                }
            },
			shipzip: {
                validators: {
                    notEmpty: {
                        message: 'The content is required and cannot be empty'
                    },
                    stringLength: {
                        max: 100,
                        message: 'The content must be less than 100 characters long'
                    }
                }
            }
        }
    });	
</script>